import Head from "next/head";
import { useEffect, useState } from "react";
import changeBackColor from "../utils/changeBackColor";
import generateRanNumber from "../utils/randomNumber";

import React from "react";
import Chart from "chart.js";
import CardInfoPpm from "../components/CardInfoPpm";
import LogInForm from "../components/login";
import { useLocalStorage } from "../hooks/localstorage";


const io = require("socket.io-client");
const socket = io("http://localhost:4000");

function useStickyState(defaultValue, key) {
  const [value, setValue] = React.useState(defaultValue);

  React.useEffect(() => {
    const stickyValue = window.localStorage.getItem(key);

    if (stickyValue !== null) {
      setValue(JSON.parse(stickyValue));
    }
  }, [key]);

  React.useEffect(() => {
    window.localStorage.setItem(key, JSON.stringify(value));
  }, [key, value]);

  return [value, setValue];
}

export default function Home() {
  
  //const [isSession, setisSession] = useState(typeof window === "undefined" &&  useLocalStorage("isSession"));
  const [isSession, setisSession] = useStickyState("isSession", false);
  //let isSession = useLocalStorage("isSession", false);
  
  const dataUser = require("../data/data.user.json")
  
  // let username =  "admin"

  // let founded =  dataUser.find(x => x.user == username);
  // console.log(founded?"TRUE":"FALSE")

  // if (typeof window !== 'undefined') return <p>Cargando..</p>

  let valorPPM = 0;

  socket.on("humo", function (data) {
    valorPPM = data;
    changeBackColor(valorPPM);
  });

  // useEffect(() => {

    //let sessionvar = Boolean( localStorage.getItem("isSession"))
    // localStorage.setItem("isSession", !sessionvar)
    // alert("SESSION? "+ sessionvar )

  // },[]);

  return (
    <div>
      <Head>
        <title>DETECCION HUMO</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <script src="https://cdn.tailwindcss.com"></script>
      </Head>

      {!isSession && (
        <>
          <LogInForm />
        </>
      )}
      {isSession && (
        <main
          id="cambiarBack"
          className="w-screen h-screen bg-blue-500  text-center flex flex-col items-center justify-center gap-4 relative"
        >
          <div className="absolute top-0 right-0 m-4">
            <form>
              <input
                value={"Cerrar SesiÃ³n"}
                type="submit"
                onClick={() => localStorage.setItem("isSession", !isSession)}
                className="cursor-pointer  bg-gray-200 hover:bg-gray-300 focus:ring-4 focus:ring-purple-300 font-medium rounded-lg text-sm px-5 py-2.5 mb-2 "
              />
            </form>
          </div>
          <CardInfoPpm />
          <div>
            <a
              className=" px-4 py-2 rounded-xl  shadow  bg-purple-700 hover:bg-purple-800 text-white "
              href="/streaming"
            >
              Grafico en Tiempo Real
            </a>
          </div>
        </main>
      )}
    </div>
  );
}
